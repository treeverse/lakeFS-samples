---
version: '3.9'
name: lakefs-with-kafka
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.10
    container_name: lakefs-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.10
    container_name: lakefs-broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  connect:
    build: connect
    container_name: lakefs-connect
    ports:
      - "8083:8083"
    depends_on:
      - broker
      - zookeeper
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      AWS_ACCESS_KEY_ID: "AKIAIOSFOLKFSSAMPLES"
      AWS_SECRET_ACCESS_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"

  jupyter-notebook:
    build: jupyter
    container_name: kafka-jupyter-notebook
    environment:
      # log-level is set to WARN because of noisy stdout problem
      # -> See https://github.com/jupyter-server/jupyter_server/issues/1279
      - NOTEBOOK_ARGS=--log-level='WARN' --NotebookApp.token='' --NotebookApp.password=''
    ports:
      - 8890:8888 # Jupyter
      - 4042:4040 # Spark
    volumes:
      - $PWD:/home/jovyan
      - ./data:/data

  lakefs:
    image: treeverse/lakefs:1
    pull_policy: always
    depends_on:
      - minio-setup
    ports:
      - "18000:8000"
    environment:
      - LAKEFS_DATABASE_TYPE=local
      - LAKEFS_BLOCKSTORE_TYPE=s3
      - LAKEFS_BLOCKSTORE_S3_FORCE_PATH_STYLE=true
      - LAKEFS_BLOCKSTORE_S3_ENDPOINT=http://minio:9000
      - LAKEFS_BLOCKSTORE_S3_CREDENTIALS_ACCESS_KEY_ID=minioadmin
      - LAKEFS_BLOCKSTORE_S3_CREDENTIALS_SECRET_ACCESS_KEY=minioadmin
      - LAKEFS_AUTH_ENCRYPT_SECRET_KEY=some random secret string
      - LAKEFS_LOGGING_LEVEL=INFO
      - LAKEFS_STATS_ENABLED=${LAKEFS_STATS_ENABLED:-1}
      - LAKEFS_INSTALLATION_USER_NAME=everything-bagel
      - LAKEFS_INSTALLATION_ACCESS_KEY_ID=AKIAIOSFOLKFSSAMPLES
      - LAKEFS_INSTALLATION_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - LAKECTL_SERVER_ENDPOINT_URL=http://localhost:8000
    entrypoint: ["/bin/sh", "-c"]
    command:
        - |
          lakefs run --local-settings &
          echo "---- Creating repository ----"
          wait-for -t 60 lakefs:8000 -- curl -u "$$LAKEFS_INSTALLATION_ACCESS_KEY_ID":"$$LAKEFS_INSTALLATION_SECRET_ACCESS_KEY" -X POST -H "Content-Type: application/json" -d '{ "name": "quickstart", "storage_namespace": "s3://quickstart", "default_branch": "main", "sample_data": true }' http://localhost:8000/api/v1/repositories || true
          # wait-for -t 60 lakefs:8000 -- lakectl repo create lakefs://example s3://example || true
          echo ""
          wait-for -t 60 minio:9000 && echo '------------------------------------------------

                MinIO admin:   http://127.0.0.1:19001/
                
                       Username : minioadmin
                       Password : minioadmin
                '
          echo "------------------------------------------------"
          wait-for -t 60 jupyter-notebook:8888 && echo '

                Jupyter:       http://127.0.0.1:8890/
                '
          echo "------------------------------------------------"
          echo ""
          echo "      lakeFS Web UI: http://127.0.0.1:18000/"
          echo ""
          echo "                                           >(.ï¼¿.)<"
          echo "                                             (  )_ "
          echo ""
          echo "       Access Key ID    : $$LAKEFS_INSTALLATION_ACCESS_KEY_ID"
          echo "       Secret Access Key: $$LAKEFS_INSTALLATION_SECRET_ACCESS_KEY"
          echo ""
          echo "-------- Let's go and have axolotl fun! --------"
          echo ""
          wait
    profiles:
      - local-lakefs

  minio-setup:
    image: minio/mc:RELEASE.2023-05-18T16-59-00Z
    environment:
        - MC_HOST_lakefs=http://minioadmin:minioadmin@minio:9000
    depends_on:
      - minio
    volumes:
      - ./data:/data
    entrypoint: ["/bin/sh", "-c"]
    command:
        - |
          mc mb lakefs/quickstart lakefs/example lakefs/sample-data
          mc cp --recursive /data/* lakefs/sample-data 1>/dev/null # don't be so noisy ðŸ¤«
    profiles:
      - local-lakefs

  minio:
    image: minio/minio:RELEASE.2023-05-18T00-05-36Z
    ports:
      - "19001:9001"
    entrypoint: ["minio", "server", "/data", "--console-address", ":9001"]
    profiles:
      - local-lakefs

networks:
  default:
    name: lakefs-kafka-network

